// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- users.prisma ---
model users {
  user_id       Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(50)
  email         String    @unique @db.VarChar(100)
  password_hash String
  role          String    @db.VarChar(20)
  token         String?   @db.Text
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
  last_logout   DateTime? @db.Timestamp(6)
}

// --- clients.prisma ---
model clients {
  client_id     Int       @id @default(autoincrement())
  first_name    String
  last_name     String
  email         String?   @unique
  phone         String?
  dni           String?   @unique
  address       String?
  country       String?
  city          String?
  postal_code   String?

  company_id    Int?                          // FK opcional
  company       companies? @relation(fields: [company_id], references: [company_id])

  created_at    DateTime? @default(now())
  updated_at    DateTime? @default(now())

  vehicles      vehicles[]
  work_orders   work_orders[]
}

// --- companies.prisma ---
model companies {
  company_id     Int       @id @default(autoincrement())
  name           String
  tax_id         String?   @unique
  email          String?
  phone          String?
  address        String?
  country        String?
  city           String?
  postal_code    String?

  clients        clients[]
  vehicles       vehicles[]

  created_at     DateTime?  @default(now())
  updated_at     DateTime?  @default(now())
}

// --- vehicles.prisma ---
model vehicles {
  vehicle_id         Int       @id @default(autoincrement())
  client_id          Int
  company_id         Int?
  make               String
  model              String
  year               Int
  vin                String     @unique
  license_plate      String     @unique
  hsn                String     @db.VarChar(4)
  tsn                String     @db.VarChar(3)
  fuel_type          String
  drive              String
  transmission       String
  tuv_date           DateTime?
  km                 Int
  last_service_date  DateTime?
  created_at         DateTime?  @default(now())
  updated_at         DateTime?  @default(now())

  client             clients    @relation(fields: [client_id], references: [client_id])
  company            companies? @relation(fields: [company_id], references: [company_id])

  appointments       appointments[]
  pre_work_orders    pre_work_orders[]
  work_orders        work_orders[]
}

// --- appointments.prisma ---
model appointments {
  appointment_id Int       @id @default(autoincrement())
  vehicle_id     Int
  date           DateTime
  status         String    @default("scheduled")
  notes          String?

  created_at     DateTime? @default(now())
  updated_at     DateTime? @default(now())

  vehicle        vehicles  @relation(fields: [vehicle_id], references: [vehicle_id])
}

// --- inspection_templates.prisma ---
model inspection_templates {
  template_id     Int       @id @default(autoincrement())
  name            String
  description     String?
  points          Json
  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())

  pre_work_orders pre_work_orders[]
}

// --- pre_work_orders.prisma ---
model pre_work_orders {
  pre_work_order_id Int       @id @default(autoincrement())
  vehicle_id        Int
  template_id       Int
  inspector_name    String?
  findings          Json
  approved          Boolean?

  created_at        DateTime? @default(now())
  updated_at        DateTime? @default(now())

  vehicle           vehicles   @relation(fields: [vehicle_id], references: [vehicle_id])
  template          inspection_templates @relation(fields: [template_id], references: [template_id])
}

// --- work_orders.prisma ---
model work_orders {
  work_order_id   Int       @id @default(autoincrement())
  vehicle_id      Int
  client_id       Int
  description     String?
  status          String    @default("open")
  tasks           Json?
  start_date      DateTime?
  end_date        DateTime?
  total_cost      Float?

  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())

  vehicle         vehicles  @relation(fields: [vehicle_id], references: [vehicle_id])
  client          clients   @relation(fields: [client_id], references: [client_id])
  invoice         invoices? @relation
}

// --- invoices.prisma ---
model invoices {
  invoice_id      Int       @id @default(autoincrement())
  work_order_id   Int       @unique
  issue_date      DateTime  @default(now())
  due_date        DateTime?
  total_amount    Float
  paid            Boolean   @default(false)
  payment_method  String?

  created_at      DateTime? @default(now())
  updated_at      DateTime? @default(now())

  work_order      work_orders @relation(fields: [work_order_id], references: [work_order_id])
}
